@import url("https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;700&display=swap");
@import "./theme.css";

* {
  margin: 0;
  padding: 0;
  text-rendering: optimizeLegibility;
}

body {
  font-size: 62.5%; /* defaults to 10px */
  font-family: "poppins", sans-serif;
  background-color: var(--main-bg);
  overflow-x: hidden;
}

header {
  font-family: var(--header-font-family), sans-serif;
  background-color: var(--header-bg);
  padding: 1.5rem 1.2rem;
  color: white;
}

main {
  min-height: 100vh;
}

.top-tools {
  margin: 2rem 0 5rem 0;
  padding: 0 1.2rem;
  text-align: center;
}

input[type="search"] {
  text-align: center;
  width: 80%;
  font-size: 1.2rem;
  padding: 0.5rem;
  outline: none;
  border-radius: 0.3rem;
  border: 2px solid var(--primary);
  margin-bottom: 2rem;
}

.abilities-head {
  margin-top: 3rem;
  font-weight: bold;
  font-size: 1.5rem;
}

.abilities-body {
  margin-top: 1rem;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
}

.abilities-body > * {
  color: white;
  background-color: var(--primary);
  padding: 0.5rem 0.5rem;
  font-size: 0.9rem;
  border-radius: 10px;
  cursor: pointer;
  transition: 0.4s cubic-bezier(0.19, 1, 0.22, 1);
  margin-right: 2rem;
  margin-bottom: 1rem;
  outline: none;
  border: unset;
  box-shadow: 0px 4px var(--box-shadow-color);
}

.abilities-body > *.active {
  background-color: var(--primary-light);
  transform: translateY(-4px);
  box-shadow: 0 5px 10px 10px var(--box-shadow-color);
}

.abilities-body > *:hover {
  background-color: var(--primary-light);
}

.card-list {
  margin: 0 auto;
  display: grid;
  margin-bottom: 5rem;
  gap: 2rem 2rem;
}

.card {
  display: flex;
  background-color: var(--card-bg);
  cursor: pointer;
  flex-direction: column;
  border: 3px solid transparent;
  border-radius: 10px;
  width: 70%;
  margin: 0 auto;
  border: 3px solid var(--primary);
  padding: 1rem;
  position: relative;
  transition: 0.4s;
}

.card:hover {
  animation: shake 1s infinite;
  box-shadow: 0 5px 10px 10px var(--box-shadow-color);
}

.card-ability-tag {
  position: absolute;
  top: -20px;
  right: -30px;
  font-size: 2rem;
}

.card:hover .card-ability-tag {
  animation: rotate 1s cubic-bezier(0.165, 0.84, 0.44, 1) forwards;
}

.card-image {
  width: 100%;
  object-fit: contain;
}

.card > span {
  text-align: center;
}

.card-name {
  font-size: 1rem;
  margin: 0 auto 1.2rem;
  color: white;
  width: fit-content;
  display: inline;
  margin-top: -1rem;
  background-color: var(--primary);
  padding: 0.4rem;
  border-radius: 10px;
}

.card-quirk {
  font-weight: bold;
  color: var(--primary);
  font-size: 2rem;
}

@media screen and (min-width: 600px) {
  body {
    font-size: 66.5%;
  }
  header {
    font-size: 1.1rem;
  }
  .top-tools {
    margin: 2rem 0 5rem 0;
  }

  input[type="search"] {
    margin-top: 2rem;
    font-size: 2rem;
    width: 30rem;
    text-align: left;
  }

  .abilities-head {
    font-size: 2rem;
  }

  .abilities-body > * {
    background-color: var(--primary);
    padding: 0.5rem 0.5rem;
    font-size: 1.3rem;
  }
}
@media screen and (min-width: 800px) {
  header,
  .top-tools {
    padding-left: 8rem;
  }
  .card-list {
    grid-template-columns: repeat(auto-fill, 18rem);
    gap: 2rem 4rem;
    max-width: 90rem;
    padding: 0 4rem;
    place-content: center;
  }

  .card {
    width: 100%;
  }
}

@media screen and (min-width: 1200px) {
  .card-list {
    gap: 2rem 6rem;
  }
}

@keyframes shake {
  0% {
    transform: translate(1px, 1px) rotate(0deg);
  }
  10% {
    transform: translate(-1px, -2px) rotate(-1deg);
  }
  20% {
    transform: translate(-3px, 0px) rotate(1deg);
  }
  30% {
    transform: translate(3px, 2px) rotate(0deg);
  }
  40% {
    transform: translate(1px, -1px) rotate(1deg);
  }
  50% {
    transform: translate(-1px, 2px) rotate(-1deg);
  }
  60% {
    transform: translate(-3px, 1px) rotate(0deg);
  }
  70% {
    transform: translate(3px, 1px) rotate(-1deg);
  }
  80% {
    transform: translate(-1px, -1px) rotate(1deg);
  }
  90% {
    transform: translate(1px, 2px) rotate(0deg);
  }
  100% {
    transform: translate(1px, -2px) rotate(-1deg);
  }
}

@keyframes rotate {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
