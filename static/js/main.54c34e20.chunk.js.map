{"version":3,"sources":["components/Header.jsx","utils/random.js","context/card-context.jsx","components/Card.jsx","components/CardList.jsx","components/Tag.jsx","components/SearchInput.jsx","components/ThemePicker.jsx","App.jsx","index.js"],"names":["names1","names2","abilities","ability","tag","getRandomIndex","array","Math","floor","random","length","Object","assign","randomFromRange","start","end","Error","CardContext","createContext","reducer","state","action","type","localStorage","setItem","payload","document","querySelector","setAttribute","theme","query","searchedCards","cards","filter","card","name","toLowerCase","includes","initialState","randomNumber","i","push","id","imgSet","getInitialState","CardContextProvider","children","useReducer","getItem","dispatch","Provider","value","className","src","CardList","useContext","map","idx","Card","Tag","onClick","SearchInput","placeholder","onChange","target","ThemePicker","themes","changeTheme","useEffect","setInterval","clearInterval","Theme","App","Header","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.54c34e20.chunk.js","sourcesContent":["export default () => {\r\n    return <header>\r\n        <h1>Cool card shuffle</h1>\r\n    </header>\r\n}","const names1 = [\r\n  \"Emmanuel\",\r\n  \"Michael\",\r\n  \"Abiodun\",\r\n  \"Tochi\",\r\n  \"Benedict\",\r\n  \"olawale\",\r\n  \"yanju\",\r\n  \"sowobi\",\r\n  \"Abdulsamad\",\r\n  \"Chiamaka\",\r\n  \"Gbemisola\",\r\n  \"Ibukunoluwa\",\r\n  \"Inioluwa\",\r\n  \"Irekanmi\",\r\n  \"Kitan\",\r\n  \"Ire\",\r\n  \"Shade\",\r\n  \"Momori\",\r\n];\r\n\r\nconst names2 = [\r\n  \"Mary\",\r\n  \"Michael\",\r\n  \"Peter\",\r\n  \"Redeem\",\r\n  \"Stephanie\",\r\n  \"Abaeze\",\r\n  \"Adaobi\",\r\n  \"Adaure\",\r\n  \"Ihuoma\",\r\n  \"Ijeawele\",\r\n  \"Isoken\",\r\n  \"Iyawa\",\r\n  \"Ifechukwu\",\r\n  \"Idaramfon\",\r\n  \"Dayo\",\r\n  \"Durojaiye\",\r\n  \"Debare\",\r\n  \"Peter\",\r\n];\r\n\r\nexport const abilities = [\r\n  {\r\n    ability: \"Super Speed\",\r\n    tag: \"âš¡âš¡\",\r\n  },\r\n  {\r\n    ability: \"Super strength\",\r\n    tag: \"ðŸ’ªðŸ’ª\",\r\n  },\r\n  {\r\n    ability: \"Super brain\",\r\n    tag: \"ðŸ§ ðŸ§ \",\r\n  },\r\n  {\r\n    ability: \"Flying\",\r\n    tag: \"âœˆâœˆ\",\r\n  },\r\n  {\r\n    ability: \"Super Hearing\",\r\n    tag: \"ðŸ‘‚ðŸ‘‚\",\r\n  },\r\n];\r\n\r\nconst getRandomIndex = (array) => {\r\n  return Math.floor(Math.random() * array.length);\r\n};\r\n\r\nexport function generateRandomName() {\r\n  return `${names1[getRandomIndex(names1)]} ${names2[getRandomIndex(names2)]}`;\r\n}\r\n\r\nexport function generateRandomAbility() {\r\n  return abilities[getRandomIndex(abilities)];\r\n}\r\n\r\nconst randomFromRange = (start, end) => {\r\n  if (start > end) throw Error(\"start should be less than end\");\r\n  return Math.floor(Math.random() * (end - start)) + start;\r\n};\r\n\r\nexport function GenerateCard(id) {\r\n  return {\r\n    id,\r\n    imgSet: Math.randomFromRange(1, 5),\r\n    name: generateRandomName(),\r\n    ability: generateRandomAbility(),\r\n  };\r\n}\r\n\r\nObject.assign(Math, { randomFromRange });\r\n","import { createContext, useReducer } from \"react\";\r\nimport { GenerateCard } from \"../utils/random\";\r\n\r\nexport const CardContext = createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"changeTheme\":\r\n      localStorage.setItem(\"theme\", action.payload);\r\n      document.querySelector(\"html\").setAttribute(\"class\", action.payload);\r\n\r\n      return { ...state, theme: action.payload };\r\n    case \"onSearchChange\":\r\n    case \"tagOnClick\":\r\n      return {\r\n        ...state,\r\n        query: action.payload,\r\n        searchedCards: state.cards.filter(\r\n          (card) =>\r\n            card.name.toLowerCase().includes(action.payload.toLowerCase()) ||\r\n            card.ability.ability\r\n              .toLowerCase()\r\n              .includes(action.payload.toLowerCase())\r\n        ),\r\n      };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nconst getInitialState = () => {\r\n  const randomNumber = Math.randomFromRange(10, 15);\r\n  const initialState = [];\r\n  for (let i = 0; i < randomNumber; i++) {\r\n    initialState.push(GenerateCard(i));\r\n  }\r\n  return { cards: initialState, searchedCards: [], query: \"\" };\r\n};\r\n\r\nconst initialState = getInitialState();\r\n\r\nexport const CardContextProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(\r\n    reducer,\r\n    initialState,\r\n    (initialState) => {\r\n      const theme = localStorage.getItem(\"theme\") || \"magenta\";\r\n      document.querySelector(\"html\").setAttribute(\"class\", theme);\r\n      return { ...initialState, theme };\r\n    }\r\n  );\r\n\r\n  return (\r\n    <CardContext.Provider value={{ state, dispatch }}>\r\n      {children}\r\n    </CardContext.Provider>\r\n  );\r\n};\r\n","export default ({ ability, name, imgSet, id }) => {\r\n  return (\r\n    <div className=\"card\">\r\n      <span className=\"card-ability-tag\">{ability.tag}</span>\r\n      <div className=\"image-container\">\r\n        <img\r\n          className=\"card-image\"\r\n          src={`https://robohash.org/${id}?set=set${imgSet}&size=150x150`}\r\n        />\r\n      </div>\r\n      <span className=\"card-name\">{name}</span>\r\n      <span className=\"card-quirk\">{ability.ability}</span>\r\n    </div>\r\n  );\r\n};\r\n","import { useContext } from \"react\";\r\nimport { CardContext } from \"../context/card-context\";\r\nimport Card from \"./Card\";\r\n\r\nexport const CardList = () => {\r\n  const { state } = useContext(CardContext);\r\n\r\n  return (\r\n    <section className=\"card-list\">\r\n      {state.query === \"\"\r\n        ? state.cards.map((card, idx) => {\r\n            return <Card key={idx} {...card} />;\r\n          })\r\n        : state.searchedCards.map((card, idx) => {\r\n            return <Card key={idx} {...card} />;\r\n          })}\r\n    </section>\r\n  );\r\n};\r\n","import { useContext } from \"react\";\r\nimport { CardContext } from \"../context/card-context\";\r\n\r\nexport const Tag = ({ ability }) => {\r\n  let {\r\n    dispatch,\r\n    state: { query },\r\n  } = useContext(CardContext);\r\n\r\n  if (query) {\r\n    query = query.toLowerCase();\r\n  }\r\n  return (\r\n    <button\r\n      onClick={() => {\r\n        dispatch({ type: \"tagOnClick\", payload: ability });\r\n      }}\r\n      className={query === ability.toLowerCase() ? \"active\" : \"\"}\r\n    >\r\n      {ability}\r\n    </button>\r\n  );\r\n};\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport { CardContext } from \"../context/card-context\";\r\n\r\nexport const SearchInput = () => {\r\n  const { state, dispatch } = useContext(CardContext);\r\n\r\n  return (\r\n    <input\r\n      type=\"search\"\r\n      value={state.query}\r\n      placeholder=\"Search...\"\r\n      className=\"search-input\"\r\n      onChange={({ target: { value } }) => {\r\n        dispatch({ type: \"onSearchChange\", payload: value });\r\n      }}\r\n    />\r\n  );\r\n};\r\n","import { useContext, useEffect } from \"react\";\r\nimport { CardContext } from \"../context/card-context\";\r\n\r\nexport const ThemePicker = () => {\r\n  const themes = [\"blue\", \"magenta\", \"green\", \"yellow\"];\r\n  const { state, dispatch } = useContext(CardContext);\r\n\r\n  const changeTheme = (theme) => {\r\n    dispatch({\r\n      type: \"changeTheme\",\r\n      payload: theme,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const idx = setInterval(() => {\r\n      changeTheme(themes[Math.randomFromRange(0, themes.length)]);\r\n    }, 5000);\r\n    return () => clearInterval(idx);\r\n  }, [state.theme]);\r\n\r\n  return (\r\n    <div className=\"theme-picker\">\r\n      {themes.map((name, idx) => (\r\n        <Theme\r\n          changeTheme={changeTheme}\r\n          theme={state.theme}\r\n          key={idx}\r\n          name={name}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Theme = ({ name, theme, changeTheme }) => {\r\n  return (\r\n    <span\r\n      onClick={() => changeTheme(name)}\r\n      className={`${name} ${theme === name ? \"active\" : \"\"}`}\r\n    />\r\n  );\r\n};\r\n","import Header from \"./components/Header\";\nimport { CardList } from \"./components/CardList\";\nimport { Tag } from \"./components/Tag\";\nimport { abilities } from \"./utils/random\";\nimport { CardContextProvider } from \"./context/card-context\";\nimport { SearchInput } from \"./components/SearchInput\";\nimport { ThemePicker } from \"./components/ThemePicker\";\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <>\n      <CardContextProvider>\n        <Header />\n        <main>\n          <div className=\"top-tools\">\n            <SearchInput />\n            <ThemePicker />\n            <p className=\"abilities-head\">Abilities</p>\n\n            <div className=\"abilities-body\">\n              {abilities.map((ability, idx) => (\n                <Tag key={idx} {...ability} />\n              ))}\n            </div>\n          </div>\n          <CardList />\n        </main>\n      </CardContextProvider>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}